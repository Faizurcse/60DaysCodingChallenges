public class Binary_SerachinDecendingOrder {
    public static void binary(int a[],int key){
        int l=0;
        int h=a.length;
        int mid;
        int flag=0;
        while(l<=h){
            mid= l+(h-l)/2;
            if(a[mid]==key){
                flag=1; 
                System.out.println("Element "+a[mid]+" on index "+mid);             
                break;
            }
            else if(key<a[mid]){
                l=mid+1;
            }
            else{
                h=mid-1;
            }
        }
        if(flag==0){   
            System.out.println("Element not found ");
        } 
    }
    public static void binary2(int a[],int key){
        int l=0;
        int h=a.length;
        int mid;
        int flag=0;

        while(l<=h){
            mid= l+(h-l)/2;
            if(a[mid]==key){
                flag=1; 
                System.out.println("Element "+a[mid]+" on index "+mid);             
                break;
            }
            else if(key<a[mid]){
                h=mid-1;
            }
            else{
                l=mid+1;
            }
        }
        if(flag==0){   
            System.out.println("Element not found ");
        }  
    }
    public static void binary3(int a[],int key){
        if(a[0]==key)
          System.out.println("Element "+key+ "index is "+0);
        else
          System.out.println("not found");
    }
    public static void main(String args[]){
       int a[]={6};
        int key=6;
        if(a.length==1)
         binary3(a,key);
         
        else if(a[0]>a[1]){
            binary(a,key);
        }
        else{
            binary2(a,key);
        }
    }
}
