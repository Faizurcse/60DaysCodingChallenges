class Solution
{
    //Function to count the number of ways in which frog can reach the top.
    static long countWays(int n)
    {
  long m = 1000000007;
	  long fib[]= new long[n+1];
       fib[0]=1;
	 
	   for(int i=1;i<=n;i++){
		   if(i==1)
			   fib[i]=fib[i-1];
		   else if(i==2)
	          fib[i]=fib[i-1]+fib[i-2];
        else{
			long temp =fib[i-1]+fib[i-2]+fib[i-3];		
		fib[i]=temp%m;
		}
    }
	return fib[n];
    }
    
}

(2)-------> /* Given a sorted array Arr of size N and a number X, you need to find the number of occurrences of X in Arr.*/

class Solution {
    int count(int[] arr, int n, int x) {
       int count =0;
       for(int i=0;i<n;i++)
       {
           if(arr[i]==x){
               count++;
           }
       }
       return count;
    }
}
