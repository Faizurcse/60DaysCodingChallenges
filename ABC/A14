Majority Element
MediumAccuracy: 27.82%Submissions: 464K+Points: 4
Join the most popular course on DSA. Master Skills & Become Employable by enrolling today! 
Given an array A of N elements. Find the majority element in the array. A majority element in an array A of size N is an element that appears more than N/2 times in the array.
 

Example 1:

Input:
N = 3 
A[] = {1,2,3} 
Output:
-1
Explanation:
Since, each element in 
{1,2,3} appears only once so there 
is no majority element.
Example 2:

Input:
N = 5 
A[] = {3,1,3,3,2} 
Output:
3
Explanation:
Since, 3 is present more
than N/2 times, so it is 
the majority element.

Your Task:
The task is to complete the function majorityElement() which returns the majority element in the array. If no majority exists, return -1.
 

Expected Time Complexity: O(N).
Expected Auxiliary Space: O(1).

progaram//

class Solution
{
    static int majorityElement(int a[], int size)
    {
        // your code here
       HashMap<Integer,Integer>hs=new HashMap<>();
       for(int i=0;i<size;i++){
        if(!hs.containsKey(a[i])){
            hs.put(a[i],1);
        
       }
       else{
        hs.put(a[i],hs.get(a[i])+1);//  here increment the value
       }
     }
     for(Map.Entry<Integer,Integer> e : hs.entrySet()){
        if(e.getValue()>size/2)
        return e.getKey();
     }
     return -1;
    }

}
